// ⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣦⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠀⠀⠀⣤⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⠾⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀
// ⠀⣀⣀⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀
// ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣄⠀⠀
// ⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆
// ⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟
// ⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀
// ⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠘⣇⠀⠀⠂⠀⠀⠀⠀⠀⢀⡽⠁⠈⠻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⡟⠁⠀⠀
// ⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠏⠀⠀⠀⠛⣄⠀⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣄⣀⡀⠀⠀⢻⣤⡀⠀⠀⠀⠀⠠⡇⡀⡀⠀⠀⣀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⢐⣿⠅⠀⠈⠍⠩⠛⠚⠉⠷⣦⡀⠀⠀⢰⡛⢟⠒⠚⠋⠉⠙⣧⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⢾⣿⣶⣦⣤⣰⣭⣤⣥⢆⠀⠐⠩⠳⢤⡸⣧⣤⣤⢤⣆⣀⣠⣽⠄⠀⠀⠀⠀⠀⠀⠀⠄⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠋⢸⠀⠀⠀⠀⠀⠀⠀⢸⡿⣿⣼⣿⣿⣿⣿⣿⠍⠀⠀⠀⠄⠀⠀⣻⣏⣹⣿⣿⣿⣿⣿⣏⠀⠀⡀⠀⠀⠀⢀⠨⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢳⡀⠀⠀⠀⠀⣿⡛⣿⣿⣻⣾⣽⣯⣿⠈⠀⠀⠀⠀⠀⠀⣽⣿⣿⣿⣿⡿⣿⣿⡇⠀⠀⠀⠀⠀⡐⠀⠠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⠀⠁⠀⠀⠀⠈⣿⣯⢻⣿⣯⣷⣿⣿⡟⠂⠀⠀⠀⠀⠀⠀⢈⣿⣿⣿⣯⣿⣿⢿⡃⠀⠠⠐⠀⡐⠀⡁⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⡀⣤⡀⠀⡿⡱⠈⡙⠻⠿⠟⠋⠈⠀⠀⠀⠀⠀⠀⠀⠈⠘⠻⠿⠿⠟⠃⣾⠀⢠⢤⣾⠀⠐⠠⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢀⣿⡹⣄⣧⠐⠐⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢀⠀⡀⠂⠀⠀⠀⠀⣿⣠⢋⣼⣿⡆⠁⠂⢐⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡧⠀⣼⣿⢿⣦⡻⣧⣄⠂⠁⠀⠐⠀⠀⠺⢿⣄⣀⣀⣸⣿⠇⠀⠀⠠⠐⠀⡁⣠⣧⣿⣿⣛⢷⡀⠀⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣼⡿⣭⣟⣾⣷⣜⢻⣿⣦⣃⡴⣈⣀⢂⠀⡀⢀⠐⡀⢀⠠⢀⡁⢂⣁⣦⣵⣿⣿⣿⠧⢍⣊⣧⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢻⣷⡿⣟⢾⡿⣾⠛⠹⣟⣯⣘⣭⣟⣶⣵⣬⣲⣤⣧⣮⣷⣿⣿⣿⢿⡿⣯⣷⣿⣌⣶⣿⢻⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠙⢷⣿⣦⡟⠃⠀⠈⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⡿⢀⡽⢿⢁⡟⣿⡿⢃⠞⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡤⠤⠞⠋⢳⡀⡘⠹⢾⣿⣿⣿⡿⣽⣿⣿⣿⣿⣿⡿⣿⣯⣿⣟⡇⢀⡼⠻⠿⣏⡜⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠼⠛⠉⠈⠀⠀⠀⠠⢀⣿⠠⠖⣾⣿⣿⢿⣻⣿⣿⣿⣿⣿⣟⣿⣻⢿⣿⡷⠺⣡⢃⡀⠀⠀⠈⠙⠒⠦⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⡀⢆⣱⣷⠿⢧⣰⣿⣿⣿⣻⢿⣿⣿⣿⣿⣿⣽⡿⣽⣿⣿⣿⣱⣿⣦⡐⡄⡁⠀⡀⠀⠀⠀⠉⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⢀⡰⣬⣼⢿⣫⣵⣾⣿⣿⣿⣿⣷⣻⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣵⣂⡄⠠⠀⠀⢀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠦⣀⣠⡴⠖⠋⣱⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣠⡉⢟⠓⠚⠒⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⢿⣿⡿⣯⣿⢿⡿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢿⣿⣮⡘⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⢡⣾⣿⣟⡿⢯⣟⡿⣽⣟⣯⣿⣻⣯⣿⢯⣿⣽⣿⣻⡿⣟⡿⣯⣷⢿⣳⡿⣟⡿⣾⡽⣿⣾⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢶⡿⠁⣠⠟⣸⣟⣾⣽⠿⠞⠿⠿⠾⠿⣾⣟⡷⣿⢯⣟⡾⣷⣻⡽⣯⡿⠛⠛⠛⠛⠛⠛⠿⢶⡿⡽⡿⠿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⢀⡼⠋⠀⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣽⣻⢾⡽⣳⣯⠟⠉⠀⠀⠀⠀⢀⡀⠀⠀⠀⠑⠍⢥⣀⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣄⠚⠀⣀⣠⢤⣶⠊⠉⠁⠈⠉⠒⢒⡤⣄⣀⡀⠀⠈⠙⠛⠁⢀⣀⣤⠴⠒⠋⠁⠀⠀⠉⠑⢶⣄⣀⠈⠏⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣿⢻⣿⡿⢋⠞⠀⠀⠀⠀⠀⠀⠀⢱⣷⣟⣿⣿⡿⣶⣶⣿⣿⣿⣮⠄⠀⠀⠀⠀⠀⠀⠈⣆⠑⠯⣿⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⠁⢸⠆⠀⠀⠀⠀⠀⠀⠀⣸⠑⠯⣝⣻⣹⣏⣿⡿⠚⠉⠘⡀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⡀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢧⠀⠀⠀⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⠶⠤⠶⠷⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠲⠦⠴⠤⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
using i64         = long long;
using PII         = pair<int, int>;
constexpr int INF = 1e9;

i64 cnt1;
i64 cnt2;

bool check(i64 days)
{
    i64 day1 = (days + 1) / 2;
    i64 day2 = (days / 2);
    if (day1 < cnt1) {
        return false;
    }
    day1 -= cnt1;
    return (day1 / 2 + day2) >= cnt2;
}

void solve()
{
    int n;
    cin >> n;
    vector<i64> arr(n + 1);
    for (int i = 1; i <= n; i++) {
        cin >> arr[i];
    }
    i64 maxValue = *max_element(arr.begin() + 1, arr.begin() + 1 + n);
    cnt1         = 0;
    cnt2         = 0;
    for (int i = 1; i <= n; i++) {
        i64 val = arr[i];
        cnt2 += (maxValue - val) / 2;
        cnt1 += (maxValue - val) % 2;
    }
    i64 l = 0, r = 1e16;
    while (l < r) {
        i64 mid = (r - l) / 2 + l;
        if (check(mid)) {
            r = mid;
        } else {
            l = mid + 1;
        }
    }
    i64 ans = r;
    cnt1    = 0;
    cnt2    = 0;
    maxValue++;
    for (int i = 1; i <= n; i++) {
        i64 val = arr[i];
        // 2 1 1 1 1
        // 3
        //   3
        //     2
        //       3
        //     3
        //         3
        cnt2 += (maxValue - val) / 2;
        cnt1 += (maxValue - val) % 2;
    }
    l = 0, r = 1e16;
    while (l < r) {
        i64 mid = (r - l) / 2 + l;
        if (check(mid)) {
            r = mid;
        } else {
            l = mid + 1;
        }
    }
    ans = min(r, ans);
    cout << ans << '\n';
}

signed main(int argc, char** argv)
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifdef BATCH
    freopen(argv[1], "r", stdin);
    freopen(argv[2], "w", stdout);
#endif
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}